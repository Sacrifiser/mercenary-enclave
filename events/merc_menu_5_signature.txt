###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


namespace = mercMenu

country_event = {
	id = mercMenu.2100
	title = fmerc_enclave.9000.signatures
	desc = {
		trigger = {
			switch = {
				trigger = has_country_flag
				fmerc_diplo_spaceport = { text = "merc.param.operation.spaceport" }
				fmerc_diplo_liberate = { text = "merc.param.operation.liberation" }
				fmerc_diplo_miningraid = { text = "merc.param.operation.raid" }
				fmerc_diplo_fleetraid = { text = "merc.param.operation.fleet" }
			}
			text = "merc.param.target"
			switch = {
				trigger = has_country_flag
				fmerc_diplo_disguise_random = { text = "merc.param.disguise.random" }
				fmerc_diplo_disguise_other = { text = "merc.param.disguise.nonbuyer" }
				fmerc_diplo_disguise_same = { text = "merc.param.disguise.buyer" }
				fmerc_diplo_disguise_pirate = { text = "merc.param.disguise.pirate" }
				fmerc_diplo_disguise_monster = { text = "merc.param.disguise.xenofauna" }
			}
			text = newline
			success_text = { text = "merc.param.minerals" check_variable = { which = "MercCost" value > 0 } }
			success_text = { text = "merc.param.energy" check_variable = { which = "MercCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence" check_variable = { which = "MercCostInfluence" value > 0 } }
			success_text = { text = "merc.param.minerals.monthly" check_variable = { which = "MercMonthlyCost" value > 0 } }
			success_text = { text = "merc.param.energy.monthly" check_variable = { which = "MercMonthlyCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence.monthly" check_variable = { which = "MercMonthlyCostInfluence" value > 0 } }
			text = "merc.param.multiplier"
			success_text = { text = "merc.param.success" check_variable = { which = "MercSuccess" value > 0 } }
			success_text = { text = "merc.param.detection" check_variable = { which = "MercDetect" value > 0 } }
			text = newline
			text = "fmerc_enclave.conclusion.postfix"
		}
	}
	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_trader_window"
	custom_gui_option = "enclave_trader_option"
	force_open = yes
	picture_event_data = {
		portrait = event_target:mercenaries
		room = enclave_trader_room
	}

	option = {
		name = fmerc_enclave.close
		default_hide_option = yes
		hidden_effect = { remove_country_flag = "fmerc_diplomacy_engaged" }
	}
	# option = {
	# 	name = fmerc_enclave.back
	# 	hidden_effect = { country_event = { id = mercMenu.2000 } }
	# }
	option = {
		name = fmerc_enclave.accept.responsibility
		hidden_effect = {
			country_event = { id = mercMenu.2101 }
		}
	}
	option = {
		name = fmerc_enclave.accept.terms
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.nda
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.treaty
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.signature
		allow = { hidden_trigger = { always = no } }
	}
}

country_event = {
	id = mercMenu.2101
	title = fmerc_enclave.9000.signatures
	desc = {
		trigger = {
			switch = {
				trigger = has_country_flag
				fmerc_diplo_spaceport = { text = "merc.param.operation.spaceport" }
				fmerc_diplo_liberate = { text = "merc.param.operation.liberation" }
				fmerc_diplo_miningraid = { text = "merc.param.operation.raid" }
				fmerc_diplo_fleetraid = { text = "merc.param.operation.fleet" }
			}
			text = "merc.param.target"
			switch = {
				trigger = has_country_flag
				fmerc_diplo_disguise_random = { text = "merc.param.disguise.random" }
				fmerc_diplo_disguise_other = { text = "merc.param.disguise.nonbuyer" }
				fmerc_diplo_disguise_same = { text = "merc.param.disguise.buyer" }
				fmerc_diplo_disguise_pirate = { text = "merc.param.disguise.pirate" }
				fmerc_diplo_disguise_monster = { text = "merc.param.disguise.xenofauna" }
			}
			text = newline
			success_text = { text = "merc.param.minerals" check_variable = { which = "MercCost" value > 0 } }
			success_text = { text = "merc.param.energy" check_variable = { which = "MercCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence" check_variable = { which = "MercCostInfluence" value > 0 } }
			success_text = { text = "merc.param.minerals.monthly" check_variable = { which = "MercMonthlyCost" value > 0 } }
			success_text = { text = "merc.param.energy.monthly" check_variable = { which = "MercMonthlyCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence.monthly" check_variable = { which = "MercMonthlyCostInfluence" value > 0 } }
			text = "merc.param.multiplier"
			success_text = { text = "merc.param.success" check_variable = { which = "MercSuccess" value > 0 } }
			success_text = { text = "merc.param.detection" check_variable = { which = "MercDetect" value > 0 } }
			text = newline
			text = "fmerc_enclave.conclusion.postfix"
		}
	}

	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_trader_window"
	custom_gui_option = "enclave_trader_option"
	force_open = yes
	picture_event_data = {
		portrait = event_target:mercenaries
		room = enclave_trader_room
	}

	option = {
		name = fmerc_enclave.close
		default_hide_option = yes
		hidden_effect = { remove_country_flag = "fmerc_diplomacy_engaged" }
	}
	# option = {
	# 	name = fmerc_enclave.back
	# 	hidden_effect = { country_event = { id = mercMenu.2000 } }
	# }
	option = {
		name = fmerc_enclave.accept.responsibility
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.terms
		hidden_effect = {
			country_event = { id = mercMenu.2102 }
		}
	}
	option = {
		name = fmerc_enclave.accept.nda
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.treaty
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.signature
		allow = { hidden_trigger = { always = no } }
	}
}

country_event = {
	id = mercMenu.2102
	title = fmerc_enclave.9000.signatures
	desc = {
		trigger = {
			switch = {
				trigger = has_country_flag
				fmerc_diplo_spaceport = { text = "merc.param.operation.spaceport" }
				fmerc_diplo_liberate = { text = "merc.param.operation.liberation" }
				fmerc_diplo_miningraid = { text = "merc.param.operation.raid" }
				fmerc_diplo_fleetraid = { text = "merc.param.operation.fleet" }
			}
			text = "merc.param.target"
			switch = {
				trigger = has_country_flag
				fmerc_diplo_disguise_random = { text = "merc.param.disguise.random" }
				fmerc_diplo_disguise_other = { text = "merc.param.disguise.nonbuyer" }
				fmerc_diplo_disguise_same = { text = "merc.param.disguise.buyer" }
				fmerc_diplo_disguise_pirate = { text = "merc.param.disguise.pirate" }
				fmerc_diplo_disguise_monster = { text = "merc.param.disguise.xenofauna" }
			}
			text = newline
			success_text = { text = "merc.param.minerals" check_variable = { which = "MercCost" value > 0 } }
			success_text = { text = "merc.param.energy" check_variable = { which = "MercCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence" check_variable = { which = "MercCostInfluence" value > 0 } }
			success_text = { text = "merc.param.minerals.monthly" check_variable = { which = "MercMonthlyCost" value > 0 } }
			success_text = { text = "merc.param.energy.monthly" check_variable = { which = "MercMonthlyCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence.monthly" check_variable = { which = "MercMonthlyCostInfluence" value > 0 } }
			text = "merc.param.multiplier"
			success_text = { text = "merc.param.success" check_variable = { which = "MercSuccess" value > 0 } }
			success_text = { text = "merc.param.detection" check_variable = { which = "MercDetect" value > 0 } }
			text = newline
			text = "fmerc_enclave.conclusion.postfix"
		}
	}

	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_trader_window"
	custom_gui_option = "enclave_trader_option"
	force_open = yes
	picture_event_data = {
		portrait = event_target:mercenaries
		room = enclave_trader_room
	}

	option = {
		name = fmerc_enclave.close
		default_hide_option = yes
		hidden_effect = { remove_country_flag = "fmerc_diplomacy_engaged" }
	}
	# option = {
	# 	name = fmerc_enclave.back
	# 	hidden_effect = { country_event = { id = mercMenu.2000 } }
	# }
	option = {
		name = fmerc_enclave.accept.responsibility
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.terms
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.nda
		hidden_effect = {
			country_event = { id = mercMenu.2103 }
		}
	}
	option = {
		name = fmerc_enclave.accept.treaty
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.signature
		allow = { hidden_trigger = { always = no } }
	}
}

country_event = {
	id = mercMenu.2103
	title = fmerc_enclave.9000.signatures
	desc = {
		trigger = {
			switch = {
				trigger = has_country_flag
				fmerc_diplo_spaceport = { text = "merc.param.operation.spaceport" }
				fmerc_diplo_liberate = { text = "merc.param.operation.liberation" }
				fmerc_diplo_miningraid = { text = "merc.param.operation.raid" }
				fmerc_diplo_fleetraid = { text = "merc.param.operation.fleet" }
			}
			text = "merc.param.target"
			switch = {
				trigger = has_country_flag
				fmerc_diplo_disguise_random = { text = "merc.param.disguise.random" }
				fmerc_diplo_disguise_other = { text = "merc.param.disguise.nonbuyer" }
				fmerc_diplo_disguise_same = { text = "merc.param.disguise.buyer" }
				fmerc_diplo_disguise_pirate = { text = "merc.param.disguise.pirate" }
				fmerc_diplo_disguise_monster = { text = "merc.param.disguise.xenofauna" }
			}
			text = newline
			success_text = { text = "merc.param.minerals" check_variable = { which = "MercCost" value > 0 } }
			success_text = { text = "merc.param.energy" check_variable = { which = "MercCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence" check_variable = { which = "MercCostInfluence" value > 0 } }
			success_text = { text = "merc.param.minerals.monthly" check_variable = { which = "MercMonthlyCost" value > 0 } }
			success_text = { text = "merc.param.energy.monthly" check_variable = { which = "MercMonthlyCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence.monthly" check_variable = { which = "MercMonthlyCostInfluence" value > 0 } }
			text = "merc.param.multiplier"
			success_text = { text = "merc.param.success" check_variable = { which = "MercSuccess" value > 0 } }
			success_text = { text = "merc.param.detection" check_variable = { which = "MercDetect" value > 0 } }
			text = newline
			text = "fmerc_enclave.conclusion.postfix"
		}
	}

	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_trader_window"
	custom_gui_option = "enclave_trader_option"
	force_open = yes
	picture_event_data = {
		portrait = event_target:mercenaries
		room = enclave_trader_room
	}

	option = {
		name = fmerc_enclave.close
		default_hide_option = yes
		hidden_effect = { remove_country_flag = "fmerc_diplomacy_engaged" }
	}
	# option = {
	# 	name = fmerc_enclave.back
	# 	hidden_effect = { country_event = { id = mercMenu.2000 } }
	# }
	option = {
		name = fmerc_enclave.accept.responsibility
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.terms
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.nda
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.treaty
		hidden_effect = {
			country_event = { id = mercMenu.2104 }
		}
	}
	option = {
		name = fmerc_enclave.accept.signature
		allow = { hidden_trigger = { always = no } }
	}
}

country_event = {
	id = mercMenu.2104
	title = fmerc_enclave.9000.signatures
	desc = {
		trigger = {
			switch = {
				trigger = has_country_flag
				fmerc_diplo_spaceport = { text = "merc.param.operation.spaceport" }
				fmerc_diplo_liberate = { text = "merc.param.operation.liberation" }
				fmerc_diplo_miningraid = { text = "merc.param.operation.raid" }
				fmerc_diplo_fleetraid = { text = "merc.param.operation.fleet" }
			}
			text = "merc.param.target"
			switch = {
				trigger = has_country_flag
				fmerc_diplo_disguise_random = { text = "merc.param.disguise.random" }
				fmerc_diplo_disguise_other = { text = "merc.param.disguise.nonbuyer" }
				fmerc_diplo_disguise_same = { text = "merc.param.disguise.buyer" }
				fmerc_diplo_disguise_pirate = { text = "merc.param.disguise.pirate" }
				fmerc_diplo_disguise_monster = { text = "merc.param.disguise.xenofauna" }
			}
			text = newline
			success_text = { text = "merc.param.minerals" check_variable = { which = "MercCost" value > 0 } }
			success_text = { text = "merc.param.energy" check_variable = { which = "MercCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence" check_variable = { which = "MercCostInfluence" value > 0 } }
			success_text = { text = "merc.param.minerals.monthly" check_variable = { which = "MercMonthlyCost" value > 0 } }
			success_text = { text = "merc.param.energy.monthly" check_variable = { which = "MercMonthlyCostEnergy" value > 0 } }
			success_text = { text = "merc.param.influence.monthly" check_variable = { which = "MercMonthlyCostInfluence" value > 0 } }
			text = "merc.param.multiplier"
			success_text = { text = "merc.param.success" check_variable = { which = "MercSuccess" value > 0 } }
			success_text = { text = "merc.param.detection" check_variable = { which = "MercDetect" value > 0 } }
			text = newline
			text = "fmerc_enclave.conclusion.postfix"
		}
	}

	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_trader_window"
	custom_gui_option = "enclave_trader_option"
	force_open = yes
	picture_event_data = {
		portrait = event_target:mercenaries
		room = enclave_trader_room
	}

	option = {
		name = fmerc_enclave.close
		default_hide_option = yes
		hidden_effect = { remove_country_flag = "fmerc_diplomacy_engaged" }
	}
	# option = {
	# 	name = fmerc_enclave.back
	# 	hidden_effect = { country_event = { id = mercMenu.2000 } }
	# }
	option = {
		name = fmerc_enclave.accept.responsibility
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.terms
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.nda
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.treaty
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = fmerc_enclave.accept.signature
		hidden_effect = {
			country_event = { id = mercMenu.9000 }
		}
	}
}
