###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


namespace = mercStations

event = {
	id = mercStations.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_country = { is_country_type = "fmerc_enclave" }
	}
	immediate = {
		random_country = {
			limit = { is_country_type = "fmerc_enclave" }
			save_event_target_as = enclave
		}
		every_country = {
			limit = { has_country_flag = "fmerc_allow_stations" }
			if = {
				limit = {
					NOT = {
						event_target:enclave = {
							any_owned_fleet = {
								NOT = { is_ship_size = science }
								# Dont count the HQ
								NOT = { has_fleet_flag = "folk_mercenary_station" }
								is_inside_border = PREVPREV
								# Ignore any of our fleets if there is a colony
								# in the same system.
								NOT = { solar_system = { any_planet = { is_colony = yes } } }
							}
						}
					}
				}
				country_event = { id = mercStations.2 }
			}
		}
	}
}

# We chain to a new root event so that event targets are not shared
# with another country in the loop above.
country_event = {
	id = mercStations.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# This country has allowed station access, but we dont have any
		# stations inside their borders. At least not any good ones.

		# First, try to find a completely empty system
		random_system_within_border = {
			limit = { has_presence = no }
			random_system_planet = { save_event_target_as = spawn }
		}

		# Priority two is finding a system without any colonies and hostiles
		if = { limit = { NOT = { exists = event_target:spawn } }
			random_system_within_border = {
				limit = {
					NOT = { any_planet = { is_colony = yes } }
					NOT = {
						any_ship_in_system = {
							OR = {
								is_in_combat = yes
								AND = {
									exists = owner
									owner = {
										OR = {
											is_hostile = event_target:enclave
											is_hostile = ROOT
										}
									}
								}
							}
						}
					}
				}
				random_system_planet = { save_event_target_as = spawn }
			}
		}

		# Lower our standards, simply find a system without colonies
		if = { limit = { NOT = { exists = event_target:spawn } }
			random_system_within_border = {
				limit = { NOT = { any_planet = { is_colony = yes } } }
				random_system_planet = { save_event_target_as = spawn }
			}
		}
		# If we can't find that, we don't care to spawn anything.

		# Spawn, if we found a target.
		if = { limit = { exists = event_target:spawn }
			event_target:spawn = { planet_event = { id = mercStations.3 } }
		}
	}
}

planet_event = {
	id = mercStations.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_fleet = {
			name = "Whiteout Enterprises Outpost"
			settings = { spawn_debris = no }
			effect = {
				set_owner = event_target:enclave
				create_ship = {
					name = " "
					design = "Mercenary Enclave Century"
				}
				create_ship = {
					name = " "
					design = "Mercenary Enclave Century"
				}
				create_ship = {
					name = "Spaceport"
					design = "Mercenary Spaceport"
				}
				create_ship = {
					name = " "
					design = "Mercenary Enclave Pioneer"
				}
				create_ship = {
					name = " "
					design = "Mercenary Enclave Pioneer"
				}
				set_fleet_formation = {
					position = { x = 2.5    y = -2.5   } #4 spaceport 3
					position = { x = -2.5   y = -2.5   } #3 spaceport 2
					position = { x = -2.5    y = 2.5    } #2 spaceport 1
					position = { x = 2.5    y = 2.5    } #2 spaceport
					position = { x = 0    y = 0    } #1
				}
				set_formation_scale = 0.6
				set_location = {
					target = ROOT
					distance = 80
					angle = random
				}
				set_fleet_flag = "folk_mercenary_outpost"
			}
		}
	}
}

###############################################################################
# Station access offer
#

event = {
	id = mercStations.100
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_country = {
			limit = { is_country_type = "fmerc_enclave" }
			country_event = { id = mercStations.101 }
		}
	}
}
country_event = {
	id = mercStations.101
	hide_window = yes
	is_triggered_only = yes
	trigger = { num_communications > 0 }

	immediate = {
		set_variable = { which = "MercStations" value = 0 }
		set_variable = { which = "MercContacts" value = 0 }

		every_owned_fleet = {
			limit = { NOT = { is_ship_size = science } }
			PREV = { change_variable = { which = "MercStations" value = 1 } }
		}
		subtract_variable = { which = "MercStations" value = 1 } # Dont count HQ

		# Remember that has_communications is true towards yourself,
		# and that we don't want to count the operations countries
		every_country = {
			limit = {
				has_communications = ROOT
				OR = {
					is_ai = no
					is_country_type = "default"
					is_country_type = "ascended_empire"
					is_country_type = "lost_empire"
					is_country_type = "ascended_hive_mind"
				}
			}
			PREV = { change_variable = { which = "MercContacts" value = 1 } }
		}

		if = {
			limit = {
				check_variable = { which = "MercStations" value < "MercContacts" }
			}
			random_country = {
				limit = {
					NOT = { has_country_flag = "fmerc_allow_stations" }
					NOT = { has_country_flag = "merc_had_station_offer" }
					OR = {
						is_ai = no
						is_country_type = "default"
						is_country_type = "ascended_empire"
						is_country_type = "lost_empire"
						is_country_type = "ascended_hive_mind"
					}
					has_communications = ROOT
				}
				country_event = { id = mercStations.102 }
			}
		}
	}
}

country_event = {
	id = mercStations.102
	title = "merc.stationoffer.title"
	desc = "merc.stationoffer.desc"
	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_trader_window"
	custom_gui_option = "enclave_trader_option"
	force_open = yes
	picture_event_data = {
		portrait = FROM
		room = enclave_trader_room
	}
	immediate = { set_country_flag = "merc_had_station_offer" }
	option = {
		name = ACCEPT
		add_energy = 2500
		add_minerals = 500
		hidden_effect = {
			set_country_flag = "fmerc_allow_stations"
			set_timed_country_flag = {
				flag = "merc_cant_restrict_access"
				days = 1800
			}
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		name = DIALOG_DECLINE
		default_hide_option = yes
		ai_chance = {
			factor = 0
		}
	}
}
