###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


# Effects for space clearing operations

merc_set_target_clear = {
	log = "Clear: Locating and marking xenofauna target."
	event_target:merc_country = {
		random_owned_fleet = {
			limit = { is_inside_border = event_target:merc_buyer }
			random_owned_ship = {
				log = "Clear: - Marked [this.GetName]."
				save_event_target_as = merc_current_target
			}
			merc_found_target = yes
		}
	}
}

merc_stage5_additional_costs_clear = {
	# If we were doing a clear operation, calculate the cost
	if = {
		limit = {
			exists = event_target:merc_buyer
			NOT = { has_country_flag = "fmerc_calculated_costs" }
			has_country_flag = "merc_op_clear"
		}
		set_country_flag = "fmerc_calculated_costs"
		event_target:merc_buyer = { set_variable = { which = "MercCost" value = 300 } }

		if = { limit = { exists = event_target:merc_country }
			if = { limit = { num_killed_ships = { target = event_target:merc_country value > 4 } }
				event_target:merc_buyer = { set_variable = { which = "MercCost" value = 3000 } }
			else = { if = { limit = { num_killed_ships = { target = event_target:merc_country value > 3 } }
				event_target:merc_buyer = { set_variable = { which = "MercCost" value = 2400 } }
			else = { if = { limit = { num_killed_ships = { target = event_target:merc_country value > 2 } }
				event_target:merc_buyer = { set_variable = { which = "MercCost" value = 1800 } }
			else = { if = { limit = { num_killed_ships = { target = event_target:merc_country value > 1 } }
				event_target:merc_buyer = { set_variable = { which = "MercCost" value = 1200 } }
			else = { if = { limit = { num_killed_ships = { target = event_target:merc_country value > 0 } }
				event_target:merc_buyer = { set_variable = { which = "MercCost" value = 600 } }
			} } } } } } } } }
		}

		event_target:merc_buyer = {
			log = "Clear: Base cost is [this.MercCost]."
			merc_account_update = yes
			# Need this for the multiplier
			random_country = {
				limit = { is_country_type = "fmerc_enclave" }
				save_event_target_as = mercenaries
			}
			merc_account_set_trust_multiplier = yes
			merc_account_apply_all_modifiers = yes
			log = "Clear: Modified cost is [this.MercCost]."
			log = "Clear: Multiplier is [this.MercTrustMultiplier]%."
			merc_account_grabdatcash = yes
		}
	}
}
