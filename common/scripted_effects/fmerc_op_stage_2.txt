###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###



# STAGE 2
# - Operation actually begins, this is after a random delay
#   from when the buyer actually pays. Depending on operation.
# - ROOT/THIS is always the mercenary operations country
# - event_targets merc_buyer and merc_country always exist
# - Must chain to the specific operation types init event

fmerc_init_stage2 = {
	merc_set_buyer = yes
	merc_set_country = yes

	log = "Stage 2: Launch Mercenary Operations"

	if = { limit = { fmerc_enclave_exists = no }
		log = "Mercenary Enclave no longer exists, aborting operation."
		merc_stage4_abort_operation = yes
		break = yes
	}
	if = { limit = { NOT = { exists = event_target:merc_buyer } }
		log = "The country who ordered this operation no longer exists, aborting operation."
		merc_stage4_abort_operation = yes
		break = yes
	}
	if = { limit = { NOT = { exists = event_target:merc_country } }
		log = "The target country of this operation could not be found, aborting operation."
		merc_stage4_abort_operation = yes
		break = yes
	}

	log = "Buyer is [merc_buyer.GetName]."
	log = "Target is [merc_country.GetName]."

	merc_set_next_target = yes
	merc_stage2_operation_start = yes
}

merc_stage2_operation_start = {
	if = { limit = { NOT = { exists = event_target:merc_current_target } }
		log = "Missing required event target for operation."
		merc_stage4_abort_operation = yes
		break = yes
	}

	if = {
		limit = { count_owned_ships { count = 0 } }
		merc_spawn_fleet = yes
	}

	every_owned_fleet = {
		clear_fleet_actions = this
		fleet_event = { id = mercControllerFleet.100 }
	}
}
