###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###



# STAGE 2
# - Initialization starts after a random delay.
# - ROOT/THIS is always the mercenary operations country
# - event_targets fmerc_buyer and fmerc_target_country always exist
# - Must chain to the specific operation types init event

fmerc_init_stage2 = {
	fmerc_set_buyer = yes
	fmerc_set_target_country = yes

	log = "Stage 2: Launch Mercenary Operations"

	if = { limit = { fmerc_enclave_exists = no }
		log = "Mercenary Enclave no longer exists, aborting mission."
		set_country_flag = "fmerc_ops_completed"
		break = yes
	}
	if = { limit = { NOT = { exists = event_target:fmerc_buyer } }
		log = "The country who ordered this operation no longer exists, aborting mission."
		set_country_flag = "fmerc_ops_completed"
		break = yes
	}
	if = { limit = { NOT = { exists = event_target:fmerc_target_country } }
		log = "The target country of this operation could not be found, aborting mission."
		set_country_flag = "fmerc_ops_completed"
		break = yes
	}

	log = "Buyer is [fmerc_buyer.GetName]."
	log = "Target is [fmerc_target_country.GetName]."

	switch = {
		trigger = has_country_flag
		merc_op_spaceport = {
			fmerc_stage2_init_spaceport = yes
			fmerc_stage2_tag_ships = yes
			country_event = { id = mercOpsFleet.1 }
		}
		merc_op_liberation = {
			fmerc_stage2_init_liberation = yes
			country_event = { id = mercOpsLiberation.1 }
		}
		merc_op_civilian_raid = {
			# Ships are tagged in this
			fmerc_stage2_init_raid = yes
			country_event = { id = mercOpsFleet.1 }
		}
		merc_op_fleet = {
			fmerc_stage2_init_fleet = yes
			fmerc_stage2_tag_ships = yes
			country_event = { id = mercOpsFleet.1 }
		}
		merc_op_amoeba = {
			fmerc_stage2_init_clear = yes
			fmerc_stage2_tag_ships = yes
			country_event = { id = mercOpsFleet.1 }
		}
		merc_op_cloud = {
			fmerc_stage2_init_clear = yes
			fmerc_stage2_tag_ships = yes
			country_event = { id = mercOpsFleet.1 }
		}
		merc_op_crystal = {
			fmerc_stage2_init_clear = yes
			fmerc_stage2_tag_ships = yes
			country_event = { id = mercOpsFleet.1 }
		}
		merc_op_pirate = {
			fmerc_stage2_init_clear = yes
			fmerc_stage2_tag_ships = yes
			country_event = { id = mercOpsFleet.1 }
		}
		merc_op_drone = {
			fmerc_stage2_init_clear = yes
			fmerc_stage2_tag_ships = yes
			country_event = { id = mercOpsFleet.1 }
		}
	}
}

# The AI has a habit of splitting and merging fleets 24/7.
# At least they did in 1.4.x and earlier. That's mainly why we mark targets like this.
fmerc_stage2_tag_ships = {
	log = "Tag: Tagging target ships for destruction, in case fleets split up."
	if = {
		limit = {
			# ZZZ
			# fmerc_target doesnt exist if we're doing a space clear event,
			# and there are zero creatures to attack
			exists = event_target:fmerc_target
		}
		event_target:fmerc_target_country = {
			every_owned_ship = {
				limit = {
					exists = fleet
					fleet = {
						is_same_value = event_target:fmerc_target
					}
				}
				set_ship_flag = "fmerc_target"
			}
		}
		else = { # No target exists, so simply GTFO
			log = "Tag: fmerc_target doesn't exist, aborting mission."
			set_country_flag = "fmerc_ops_completed"
		}
	}
}
