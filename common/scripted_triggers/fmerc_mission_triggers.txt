###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###

fmerc_stage1_same_culture = {
	OR = {
		AND = {
			graphical_culture = "arthropoid_01"
			last_created_country = {
				has_country_flag = "arthropoid_01"
			}
		}
		AND = {
			graphical_culture = "avian_01"
			last_created_country = {
				has_country_flag = "avian_01"
			}
		}
		AND = {
			graphical_culture = "fungoid_01"
			last_created_country = {
				has_country_flag = "fungoid_01"
			}
		}
		AND = {
			graphical_culture = "mammalian_01"
			last_created_country = {
				has_country_flag = "mammalian_01"
			}
		}
		AND = {
			graphical_culture = "molluscoid_01"
			last_created_country = {
				has_country_flag = "molluscoid_01"
			}
		}
		AND = {
			graphical_culture = "plantoid_01"
			last_created_country = {
				has_country_flag = "plantoid_01"
			}
		}
		AND = {
			graphical_culture = "reptilian_01"
			last_created_country = {
				has_country_flag = "reptilian_01"
			}
		}
		AND = {
			graphical_culture = "ai_01"
			last_created_country = {
				has_country_flag = "ai_01"
			}
		}
		AND = {
			graphical_culture = "extra_dimensional_01"
			last_created_country = {
				has_country_flag = "extra_dimensional_01"
			}
		}
		AND = {
			graphical_culture = "extra_dimensional_02"
			last_created_country = {
				has_country_flag = "extra_dimensional_01"
			}
		}
		AND = {
			graphical_culture = "extra_dimensional_03"
			last_created_country = {
				has_country_flag = "extra_dimensional_01"
			}
		}
		AND = {
			graphical_culture = "pirate_01"
			last_created_country = {
				has_country_flag = "pirate_01"
			}
		}
		AND = {
			graphical_culture = "fallen_empire_01"
			last_created_country = {
				has_country_flag = "fallen_empire_01"
			}
		}
		AND = {
			graphical_culture = "fallen_empire_02"
			last_created_country = {
				has_country_flag = "fallen_empire_01"
			}
		}
		AND = {
			graphical_culture = "fallen_empire_03"
			last_created_country = {
				has_country_flag = "fallen_empire_01"
			}
		}
		AND = {
			graphical_culture = "fallen_empire_04"
			last_created_country = {
				has_country_flag = "fallen_empire_01"
			}
		}
		AND = {
			graphical_culture = "fallen_machine_empire_01"
			last_created_country = {
				has_country_flag = "fallen_empire_01"
			}
		}
		AND = {
			graphical_culture = "swarm_01"
			last_created_country = {
				has_country_flag = "swarm_01"
			}
		}
		AND = {
			graphical_culture = "ancient_drone_01"
			last_created_country = {
				has_country_flag = "gfx_drone"
			}
		}
	}
}

# Note that this trigger is used both in the diplomacy screen, and during the mission
fmerc_valid_liberation_planet = {
	NOT = { has_planet_flag = "merc_error" }
	NOT = { has_planet_flag = "fmerc_target" }
	exists = owner
	exists = controller
	is_colony = yes
	is_under_colonization = no
	is_occupied_flag = no
	has_ground_combat = no
	under_bombardment = no
	is_capital = no
	is_homeworld = no
	num_pops > 1
	is_terraforming = no
	is_controlled_by = owner
}

# Note that this trigger is used both in the diplomacy screen, and during the mission
fmerc_valid_spaceport_planet = {
	exists = owner
	exists = controller
	is_colony = yes
	is_under_colonization = no
	is_occupied_flag = no
	has_ground_combat = no
	under_bombardment = no
	is_capital = no
	is_homeworld = no
	num_pops > 1
	is_terraforming = no
	is_controlled_by = owner
	has_spaceport = yes
}
